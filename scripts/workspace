#!/bin/bash

set -o pipefail

SOCKET=$(find "$XDG_RUNTIME_DIR/hypr" -type s -name ".socket2.sock" -printf '%T@ %p\n' |
  sort -nr | awk '{print $2; exit}')

for s in "$XDG_RUNTIME_DIR/hypr"/*/.socket2.sock; do
  if nc -zU "$s"; then
    SOCKET="$s"
    break
  fi
done

[ -z "$SOCKET" ] && {
  echo '{"error":"No Hyprland socket found"}'
  exit 1
}

get_workspace_status() {
  ws_json=$(hyprctl -j workspaces 2>/dev/null)
  active_ws=$(hyprctl -j activeworkspace 2>/dev/null | jq -r '.id')

  declare -A ws_status

  for ws_name in {1..10}; do
    ws_id=$(jq -r --arg name "$ws_name" '.[] | select(.name==$name) | .id' <<<"$ws_json")

    if [ -z "$ws_id" ]; then
      ws_status[$ws_name]="◯"
      continue
    fi

    num_windows=$(jq -r --arg id "$ws_id" '.[] | select(.id==($id|tonumber)) | .windows // 0' <<<"$ws_json" 2>/dev/null)
    num_windows=${num_windows:-0}

    if [ "$active_ws" = "$ws_id" ]; then
      ws_status[$ws_name]="⬤"
    elif [ "$num_windows" -gt 0 ]; then
      ws_status[$ws_name]="●"
    else
      ws_status[$ws_name]="◯"
    fi
  done

  json="{"
  first=true
  for ws in $(seq 1 10); do
    [[ "$first" = true ]] && first=false || json+=","
    json+="\"workspace_$ws\":\"${ws_status[$ws]}\""
  done
  json+="}"

  echo "$json"
}

get_workspace_status

last_status=""

# idk but socat sucks here for some reason
#
# it seems to produce invalid EOF
nc -U "$SOCKET" | while read -r line; do
  case "$line" in
  workspace\>* | workspacev2\>* | window* | createworkspace* | destroyworkspace*)
    current_status=$(get_workspace_status)
    if [ "$current_status" != "$last_status" ]; then
      echo "$current_status"
      last_status="$current_status"
    fi
    ;;
  esac
done
